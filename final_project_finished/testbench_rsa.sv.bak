module testbench_rsa();

timeunit 10ns;

timeprecision 1ns;

logic clk = 0;
logic reset_n = 0;
logic compute = 0;
logic [15:0] M, e, n;
logic [15:0] C;

logic [10:0]i;

/*prime_checker prime(.i(i)); 

always begin : CLOK_GENERATION
#1 clk = ~clk;

end


initial begin: TEST_VECTORS
#10 i = 11'b00000101001;
#10 i = 11'b00000101111;
#10 i = 11'b00001100101;
#10 i = 11'b00110011001;
#10 i = 11'b00110011000;
#10 i = 11'd23;
#10 i = 11'd26;
end*/
/*
io_module io_module0 (.clk(CLOCK_50),
										.reset_n(reset_n),
										.to_sw_sig(to_sw_sig),
										.to_sw_port(to_sw_port),
										.to_hw_sig(to_hw_sig),
										.to_hw_port(to_hw_port),
										.prime1(prime1),
										.prime2(prime2),
										.public_key(public_key),
										.plaintext(plaintext),
										.ciphertext(ciphertext),
										.io_ready(io_ready),
										.rsa_ready(rsa_ready)
					);
*/
rsa_encrypt rsa_encrypt0(.clk(CLOCK_50), .reset_n, compute,
						input [15:0] M, e, n,
						output[15:0] C);
always begin : CLOCK_GENERATION
#1 clk = ~clk;

end


initial begin: TEST_VECTORS
#10 reset_n = 1'b1;
#10 i = 11'b00000101111;
#10 i = 11'b00001100101;
#10 i = 11'b00110011001;
#10 i = 11'b00110011000;
#10 i = 11'd23;
#10 i = 11'd26;
end					
					
					
				
endmodule


